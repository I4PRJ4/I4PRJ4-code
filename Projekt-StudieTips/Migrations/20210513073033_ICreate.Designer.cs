// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_StudieTips.Data;

namespace Projekt_StudieTips.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210513073033_ICreate")]
    partial class ICreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DegreeId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Generelt",
                            DegreeId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Softwaretest",
                            DegreeId = 1
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Database",
                            DegreeId = 1
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "GUI",
                            DegreeId = 1
                        });
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DegreeId");

                    b.HasIndex("DegreeName")
                        .IsUnique()
                        .HasFilter("[DegreeName] IS NOT NULL");

                    b.ToTable("Degrees");

                    b.HasData(
                        new
                        {
                            DegreeId = 1,
                            DegreeName = "Softwareteknologi"
                        });
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Tip", b =>
                {
                    b.Property<int>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TipId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Tips");

                    b.HasData(
                        new
                        {
                            TipId = 1,
                            CourseId = 1,
                            Date = new DateTime(2021, 4, 22, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Gode idéer",
                            Text = "Nu skal i bare høre!",
                            UserId = 1
                        },
                        new
                        {
                            TipId = 2,
                            CourseId = 1,
                            Date = new DateTime(2021, 4, 22, 15, 12, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Billigste bøger?",
                            Text = "Læs overskrift?",
                            UserId = 3
                        },
                        new
                        {
                            TipId = 3,
                            CourseId = 1,
                            Date = new DateTime(2021, 4, 26, 5, 8, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Mcdonalds-snak",
                            Text = "Fish-O-Filet er det bedste",
                            UserId = 2
                        },
                        new
                        {
                            TipId = 4,
                            CourseId = 1,
                            Date = new DateTime(2021, 4, 18, 19, 36, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Tips til Zombs",
                            Text = "jeg er dårlig, søger et team, træning hver onsdag kl. 20",
                            UserId = 4
                        },
                        new
                        {
                            TipId = 5,
                            CourseId = 2,
                            Date = new DateTime(2021, 4, 23, 8, 3, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Ladeskabsopgaven",
                            Text = "Forstår den ikk",
                            UserId = 2
                        },
                        new
                        {
                            TipId = 6,
                            CourseId = 3,
                            Date = new DateTime(2021, 4, 24, 20, 28, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Hjælp til DAB",
                            Text = "Jeg har virkelig brug for hjælp til DAB Assignment 2",
                            UserId = 1
                        },
                        new
                        {
                            TipId = 7,
                            CourseId = 3,
                            Date = new DateTime(2021, 4, 27, 10, 38, 0, 0, DateTimeKind.Unspecified),
                            Headline = "Assignment 3",
                            Text = "hvad sker der",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Username = "TronaldDump"
                        },
                        new
                        {
                            UserId = 2,
                            Username = "SwedishNoob"
                        },
                        new
                        {
                            UserId = 3,
                            Username = "TheLegend"
                        },
                        new
                        {
                            UserId = 4,
                            Username = "IntrovertedSnail"
                        });
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.HasOne("Projekt_StudieTips.Models.Degree", "Degrees")
                        .WithMany("Courses")
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Tip", b =>
                {
                    b.HasOne("Projekt_StudieTips.Models.Course", "Course")
                        .WithMany("Tips")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_StudieTips.Models.User", "User")
                        .WithMany("Tips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.Navigation("Tips");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Degree", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.User", b =>
                {
                    b.Navigation("Tips");
                });
#pragma warning restore 612, 618
        }
    }
}
