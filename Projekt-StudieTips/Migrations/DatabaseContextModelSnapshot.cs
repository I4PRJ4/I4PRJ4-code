// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_StudieTips.Data;

namespace Projekt_StudieTips.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DegreeId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Degree", b =>
                {
                    b.Property<int>("DegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DegreeId");

                    b.HasIndex("DegreeName")
                        .IsUnique()
                        .HasFilter("[DegreeName] IS NOT NULL");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Tip", b =>
                {
                    b.Property<int>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TipId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Tips");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Username = "TronaldDump"
                        },
                        new
                        {
                            UserId = 2,
                            Username = "SwedishNoob"
                        },
                        new
                        {
                            UserId = 3,
                            Username = "TheLegend"
                        },
                        new
                        {
                            UserId = 4,
                            Username = "IntrovertedSnail"
                        });
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.HasOne("Projekt_StudieTips.Models.Degree", "Degrees")
                        .WithMany("Courses")
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Tip", b =>
                {
                    b.HasOne("Projekt_StudieTips.Models.Course", "Course")
                        .WithMany("Tips")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_StudieTips.Models.User", "User")
                        .WithMany("Tips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Course", b =>
                {
                    b.Navigation("Tips");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.Degree", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Projekt_StudieTips.Models.User", b =>
                {
                    b.Navigation("Tips");
                });
#pragma warning restore 612, 618
        }
    }
}
